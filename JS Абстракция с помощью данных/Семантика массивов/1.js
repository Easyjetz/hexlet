/*
Когда мы говорим про конструкции языка, то, помимо синтаксиса, нужно всегда помнить о семантике. 
То есть о том, для решения каких задач она создана. На практике же инструменты часто используются не по 
назначению. Это приводит к созданию кода, который сложнее понять и отлаживать, а значит и поддерживать.
*/

/*
Массив (индексированный), по своей сути, — коллекция, набор некоторых однотипных значений, 
подразумевающих возможность перебора и одинаковой обработки. Кроме того, эти значения друг с другом 
жёстко не связаны и могут существовать независимо. В массиве, часто (но не всегда), отсутствует 
позиционность, то есть жёстко зафиксированные места для его значений.
*/

/* 
Другими словами, массив используется как структура для описания составного объекта (то есть такого, 
который описывается не одним значением, а несколькими, в данном случае — двумя числами-координатами).

В такой ситуации правильнее использовать ассоциативный массив:
*/
const point = { x: 2, y: 3 };
const symmetricalPoint = { x: -point['x'], y: point['y'] };

const point1 = { x: 3, y: 4 };
const point2 = { x: -8, y: 10 };
const segment = { beginPoint: point1, endPoint: point2 };

// good semantics
point1['x'];
point2['y'];
segment['endPoint']['y'];

/*
Запомните простое правило: код, который заставляет думать — неговорящие имена, плохие абстракции, 
неправильные структуры данных, сильная зависимость от контекста — плохой код (при этом важно не путать 
лёгкость и простоту).
*/

/*
Какие ещё данные нужно представлять ассоциативными массивами? Любую одиночную сущность:

Пользователь
Курс
Урок
Платёж
Шахматная партия (помимо даты, имён и места, она содержит набор ходов)

*/