// создадим функцию суммирующую числа
const sum = (a, b) => a + b;

// но если мы хотим сумму 10 чисел? как нужно передать аргументы?

// Определение функции с переменным числом аргументов

const func = (...params) => {
    // params — это массив, содержащий все
    // переданные при вызове функции аргументы
    console.log(params);
}

func(1, 5, 15, 25, 5, 6, 6);

/* Символ троеточия ... перед именем формального параметра в определении функции обозначает 
rest-оператор. Запись ...params в определении func из примера выше означает буквально 
следующее: "все переданные при вызове функции аргументы поместить в массив params". */

// Если мы хотим чтобы были еще обязательные аргументы, то пишем так:

const func = (a, b, ...params) => {

}

// Единственное ограничение: rest-оператор может быть использован только для последнего параметра.
// нельзя: (b, ...params, a);
// Именно поэтому оператор называется rest, то есть он организует хранение "остальных" ("оставшихся", последних) параметров. 

const average = (...params) => {
    const length = params.length;
    let sum = 0;

    for (const number of params) {
        sum += number;
    }

    if (length !== 0) {
      return sum / length;
    }
    return null;
}

console.log(average(0));

